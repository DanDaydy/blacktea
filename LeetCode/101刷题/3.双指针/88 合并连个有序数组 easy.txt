给你两个有序整数数组 nums1 和 nums2，请你将 nums2 合并到 nums1 中，使 nums1 成为一个有序数组。

说明：
    初始化 nums1 和 nums2 的元素数量分别为 m 和 n 。
    你可以假设 nums1 有足够的空间（空间大小大于或等于 m + n）来保存 nums2 中的元素。


示例：
输入：
nums1 = [1,2,3,0,0,0], m = 3
nums2 = [2,5,6],       n = 3

输出：[1,2,2,3,5,6]


==================================

思路：

一个指针在nums1，一个在nums2
因为题目nums1 是比较特殊的，后面的一堆000属实带来了麻烦
如果从左往右进行双指针遍历，那么肯定需要额外的存储空间


正确的思路应该是：
如果从右往左遍历，那就不用那么麻烦了
复制的位置指针在m+n-1



class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        """
        Do not return anything, modify nums1 in-place instead.
        """
        a, b = m-1, n-1
        pos = m + n -1
        while b >= 0  and a >= 0:
            if nums1[a] <= nums2[b]:
                nums1[pos] = nums2[b]
                b -= 1
            else:
                nums1[pos] = nums1[a]
                a -= 1
            pos -= 1
        if a == -1:
            for i in range(pos+1):
                nums1[i] = nums2[i]
	


