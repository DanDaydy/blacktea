假设你有一个很长的花坛，一部分地块种植了花，另一部分却没有。可是，花卉不能种植在相邻的地块上，它们会争夺水源，两者都会死去。

给定一个花坛（表示为一个数组包含0和1，其中0表示没种植花，1表示种植了花），和一个数 n 。能否在不打破种植规则的情况下种入 n 朵花？能则返回True，不能则返回False。

示例 1:
输入: flowerbed = [1,0,0,0,1], n = 1
输出: True

示例 2:
输入: flowerbed = [1,0,0,0,1], n = 2
输出: False

============================================

思路：

从左往右遍历
左1和左2都是0，左2变成1

从右往左遍历
右1和右2都是1，右2变成0

这样遍历了之后其实只有一个问题没有解决，那就是开头是0,0的情况
在flowerbed左边加个[0]就行了

---------

还有的思路是直接遍历一遍，左中右都是0的情况下改变中，这是最直观的方法，问题同样是开头怎么办。解决方法就是flowerbed的开头和结尾都加个[0]



=================================

class Solution:
    def canPlaceFlowers(self, flowerbed: List[int], n: int) -> bool:
        count = 0
        flowerbed = [0] + flowerbed
        for i in range(len(flowerbed) - 1):
            if flowerbed[i] == 0 and flowerbed[i+1] == 0:
                flowerbed[i+1] = 1
                count += 1
        
        for i in range(1,len(flowerbed)-1):
            if flowerbed[-i] == 1 and flowerbed[-i-1] == 1:
                flowerbed[-i-1] = 0
                count -= 1

        return count >= n


