给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。

你可以假设数组中无重复元素。

示例 1:

输入: [1,3,5,6], 5
输出: 2



思路：

i = 0
当nums[i] < target 时
i += 1
return i



答案思路：
二分查找

定义一个left   一个right
while  left < right:
确定中间mid = left + (left + right) // 2
如果中间数  比 target 小
那么left = mid + 1，接着循环
如果中间数 比 target 大
那么right = mid

一直循环到left < right



=====================================

最简单思路：一个一个遍历
class Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:
        i = 0
        nums.append(target)
        while nums[i] < target:
            i += 1
        return i


高级思路：二分查找


class Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:
        left,right=0,len(nums)
        while left<right:
            mid=left+(right-left)//2
            if nums[mid] == target:
                left = mid
                break
            elif nums[mid] < target:
	# 这里也挺关键的感觉
                left = mid+1
            else:
                right = mid
        return left


